import numpy as np

def get_variance_from_points(P, Q, R):
    x1, y1, z1 = P
    x2, y2, z2 = Q
    x3, y3, z3 = R
    a1 = x2 - x1 
    b1 = y2 - y1 
    c1 = z2 - z1 
    a2 = x3 - x1 
    b2 = y3 - y1 
    c2 = z3 - z1 
    a = b1 * c2 - b2 * c1 
    b = a2 * c1 - a1 * c2 
    c = a1 * b2 - b1 * a2 
    d = (- a * x1 - b * y1 - c * z1) 
    return a, b, c, d

ground = np.array([[21.047, -0.3736, -1.387],
                        [22.612, 2.090, -1.387],
                        [23.885, -1.7588, -1.387],
                        [16.730, 1.4395, -1.5487],
                        [16.004, -1.2716, -1.487],
                        [16.175, -2.5947, -1.487],
                        [12.827, 2.4882, -1.587],
                        [12.902, -3.4785, -1.587],
                        [11.987, -1.2445, -1.587],
                        [8.2376, -2.4286, -1.687],
                        [8.2085, 1.5940, -1.687],
                        [8.5676, -2.4698, -1.687],
                        [5.4809, -0.4660, -1.687],
                        [5.3492, 1.4221, -1.687],
                        [5.6559, -1.9657, -1.6876]])

x, y = 50, 5
a, b, c, d = get_variance_from_points((8.2085, 1.5940, -1.687),(5.6559, -1.9657, -1.6876),(12.902, -3.4785, -1.6876))
z = -(a*x + b*y + d) / c

print(z)